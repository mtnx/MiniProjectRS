// Code generated by protoc-gen-go. DO NOT EDIT.
// source: supplier.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	supplier.proto

It has these top-level messages:
	AddSupplierReq
	ReadSupplierByNamaReq
	ReadSupplierByNamaResp
	ReadSupplierResp
	UpdateSupplierReq
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddSupplierReq struct {
	KodeSupplier  string `protobuf:"bytes,1,opt,name=KodeSupplier" json:"KodeSupplier,omitempty"`
	NamaSupplier  string `protobuf:"bytes,2,opt,name=NamaSupplier" json:"NamaSupplier,omitempty"`
	JenisSupplier string `protobuf:"bytes,3,opt,name=JenisSupplier" json:"JenisSupplier,omitempty"`
	CreatedBy     string `protobuf:"bytes,4,opt,name=CreatedBy" json:"CreatedBy,omitempty"`
	CreatedOn     string `protobuf:"bytes,5,opt,name=CreatedOn" json:"CreatedOn,omitempty"`
	UpdateBy      string `protobuf:"bytes,6,opt,name=UpdateBy" json:"UpdateBy,omitempty"`
	UpdateOn      string `protobuf:"bytes,7,opt,name=UpdateOn" json:"UpdateOn,omitempty"`
	Status        int32  `protobuf:"varint,8,opt,name=Status" json:"Status,omitempty"`
}

func (m *AddSupplierReq) Reset()                    { *m = AddSupplierReq{} }
func (m *AddSupplierReq) String() string            { return proto.CompactTextString(m) }
func (*AddSupplierReq) ProtoMessage()               {}
func (*AddSupplierReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddSupplierReq) GetKodeSupplier() string {
	if m != nil {
		return m.KodeSupplier
	}
	return ""
}

func (m *AddSupplierReq) GetNamaSupplier() string {
	if m != nil {
		return m.NamaSupplier
	}
	return ""
}

func (m *AddSupplierReq) GetJenisSupplier() string {
	if m != nil {
		return m.JenisSupplier
	}
	return ""
}

func (m *AddSupplierReq) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *AddSupplierReq) GetCreatedOn() string {
	if m != nil {
		return m.CreatedOn
	}
	return ""
}

func (m *AddSupplierReq) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *AddSupplierReq) GetUpdateOn() string {
	if m != nil {
		return m.UpdateOn
	}
	return ""
}

func (m *AddSupplierReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReadSupplierByNamaReq struct {
	NamaSupplier string `protobuf:"bytes,2,opt,name=NamaSupplier" json:"NamaSupplier,omitempty"`
}

func (m *ReadSupplierByNamaReq) Reset()                    { *m = ReadSupplierByNamaReq{} }
func (m *ReadSupplierByNamaReq) String() string            { return proto.CompactTextString(m) }
func (*ReadSupplierByNamaReq) ProtoMessage()               {}
func (*ReadSupplierByNamaReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadSupplierByNamaReq) GetNamaSupplier() string {
	if m != nil {
		return m.NamaSupplier
	}
	return ""
}

type ReadSupplierByNamaResp struct {
	KodeSupplier  string `protobuf:"bytes,1,opt,name=KodeSupplier" json:"KodeSupplier,omitempty"`
	NamaSupplier  string `protobuf:"bytes,2,opt,name=NamaSupplier" json:"NamaSupplier,omitempty"`
	JenisSupplier string `protobuf:"bytes,3,opt,name=JenisSupplier" json:"JenisSupplier,omitempty"`
	CreatedBy     string `protobuf:"bytes,4,opt,name=CreatedBy" json:"CreatedBy,omitempty"`
	CreatedOn     string `protobuf:"bytes,5,opt,name=CreatedOn" json:"CreatedOn,omitempty"`
	UpdateBy      string `protobuf:"bytes,6,opt,name=UpdateBy" json:"UpdateBy,omitempty"`
	UpdateOn      string `protobuf:"bytes,7,opt,name=UpdateOn" json:"UpdateOn,omitempty"`
	Status        int32  `protobuf:"varint,8,opt,name=Status" json:"Status,omitempty"`
}

func (m *ReadSupplierByNamaResp) Reset()                    { *m = ReadSupplierByNamaResp{} }
func (m *ReadSupplierByNamaResp) String() string            { return proto.CompactTextString(m) }
func (*ReadSupplierByNamaResp) ProtoMessage()               {}
func (*ReadSupplierByNamaResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadSupplierByNamaResp) GetKodeSupplier() string {
	if m != nil {
		return m.KodeSupplier
	}
	return ""
}

func (m *ReadSupplierByNamaResp) GetNamaSupplier() string {
	if m != nil {
		return m.NamaSupplier
	}
	return ""
}

func (m *ReadSupplierByNamaResp) GetJenisSupplier() string {
	if m != nil {
		return m.JenisSupplier
	}
	return ""
}

func (m *ReadSupplierByNamaResp) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *ReadSupplierByNamaResp) GetCreatedOn() string {
	if m != nil {
		return m.CreatedOn
	}
	return ""
}

func (m *ReadSupplierByNamaResp) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *ReadSupplierByNamaResp) GetUpdateOn() string {
	if m != nil {
		return m.UpdateOn
	}
	return ""
}

func (m *ReadSupplierByNamaResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReadSupplierResp struct {
	AllSupplier []*ReadSupplierByNamaResp `protobuf:"bytes,2,rep,name=allSupplier" json:"allSupplier,omitempty"`
}

func (m *ReadSupplierResp) Reset()                    { *m = ReadSupplierResp{} }
func (m *ReadSupplierResp) String() string            { return proto.CompactTextString(m) }
func (*ReadSupplierResp) ProtoMessage()               {}
func (*ReadSupplierResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadSupplierResp) GetAllSupplier() []*ReadSupplierByNamaResp {
	if m != nil {
		return m.AllSupplier
	}
	return nil
}

type UpdateSupplierReq struct {
	KodeSupplier  string `protobuf:"bytes,1,opt,name=KodeSupplier" json:"KodeSupplier,omitempty"`
	NamaSupplier  string `protobuf:"bytes,2,opt,name=NamaSupplier" json:"NamaSupplier,omitempty"`
	JenisSupplier string `protobuf:"bytes,3,opt,name=JenisSupplier" json:"JenisSupplier,omitempty"`
	CreatedBy     string `protobuf:"bytes,4,opt,name=CreatedBy" json:"CreatedBy,omitempty"`
	CreatedOn     string `protobuf:"bytes,5,opt,name=CreatedOn" json:"CreatedOn,omitempty"`
	UpdateBy      string `protobuf:"bytes,6,opt,name=UpdateBy" json:"UpdateBy,omitempty"`
	UpdateOn      string `protobuf:"bytes,7,opt,name=UpdateOn" json:"UpdateOn,omitempty"`
	Status        int32  `protobuf:"varint,8,opt,name=Status" json:"Status,omitempty"`
}

func (m *UpdateSupplierReq) Reset()                    { *m = UpdateSupplierReq{} }
func (m *UpdateSupplierReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateSupplierReq) ProtoMessage()               {}
func (*UpdateSupplierReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateSupplierReq) GetKodeSupplier() string {
	if m != nil {
		return m.KodeSupplier
	}
	return ""
}

func (m *UpdateSupplierReq) GetNamaSupplier() string {
	if m != nil {
		return m.NamaSupplier
	}
	return ""
}

func (m *UpdateSupplierReq) GetJenisSupplier() string {
	if m != nil {
		return m.JenisSupplier
	}
	return ""
}

func (m *UpdateSupplierReq) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *UpdateSupplierReq) GetCreatedOn() string {
	if m != nil {
		return m.CreatedOn
	}
	return ""
}

func (m *UpdateSupplierReq) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *UpdateSupplierReq) GetUpdateOn() string {
	if m != nil {
		return m.UpdateOn
	}
	return ""
}

func (m *UpdateSupplierReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*AddSupplierReq)(nil), "grpc.AddSupplierReq")
	proto.RegisterType((*ReadSupplierByNamaReq)(nil), "grpc.ReadSupplierByNamaReq")
	proto.RegisterType((*ReadSupplierByNamaResp)(nil), "grpc.ReadSupplierByNamaResp")
	proto.RegisterType((*ReadSupplierResp)(nil), "grpc.ReadSupplierResp")
	proto.RegisterType((*UpdateSupplierReq)(nil), "grpc.UpdateSupplierReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for SupplierService service

type SupplierServiceClient interface {
	AddSupplier(ctx context.Context, in *AddSupplierReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadSupplierByNama(ctx context.Context, in *ReadSupplierByNamaReq, opts ...grpc1.CallOption) (*ReadSupplierByNamaResp, error)
	ReadSupplier(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadSupplierResp, error)
	UpdateSupplier(ctx context.Context, in *UpdateSupplierReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
}

type supplierServiceClient struct {
	cc *grpc1.ClientConn
}

func NewSupplierServiceClient(cc *grpc1.ClientConn) SupplierServiceClient {
	return &supplierServiceClient{cc}
}

func (c *supplierServiceClient) AddSupplier(ctx context.Context, in *AddSupplierReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.SupplierService/AddSupplier", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supplierServiceClient) ReadSupplierByNama(ctx context.Context, in *ReadSupplierByNamaReq, opts ...grpc1.CallOption) (*ReadSupplierByNamaResp, error) {
	out := new(ReadSupplierByNamaResp)
	err := grpc1.Invoke(ctx, "/grpc.SupplierService/ReadSupplierByNama", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supplierServiceClient) ReadSupplier(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadSupplierResp, error) {
	out := new(ReadSupplierResp)
	err := grpc1.Invoke(ctx, "/grpc.SupplierService/ReadSupplier", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supplierServiceClient) UpdateSupplier(ctx context.Context, in *UpdateSupplierReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.SupplierService/UpdateSupplier", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SupplierService service

type SupplierServiceServer interface {
	AddSupplier(context.Context, *AddSupplierReq) (*google_protobuf.Empty, error)
	ReadSupplierByNama(context.Context, *ReadSupplierByNamaReq) (*ReadSupplierByNamaResp, error)
	ReadSupplier(context.Context, *google_protobuf.Empty) (*ReadSupplierResp, error)
	UpdateSupplier(context.Context, *UpdateSupplierReq) (*google_protobuf.Empty, error)
}

func RegisterSupplierServiceServer(s *grpc1.Server, srv SupplierServiceServer) {
	s.RegisterService(&_SupplierService_serviceDesc, srv)
}

func _SupplierService_AddSupplier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSupplierReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupplierServiceServer).AddSupplier(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.SupplierService/AddSupplier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupplierServiceServer).AddSupplier(ctx, req.(*AddSupplierReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupplierService_ReadSupplierByNama_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadSupplierByNamaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupplierServiceServer).ReadSupplierByNama(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.SupplierService/ReadSupplierByNama",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupplierServiceServer).ReadSupplierByNama(ctx, req.(*ReadSupplierByNamaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupplierService_ReadSupplier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupplierServiceServer).ReadSupplier(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.SupplierService/ReadSupplier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupplierServiceServer).ReadSupplier(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupplierService_UpdateSupplier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSupplierReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupplierServiceServer).UpdateSupplier(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.SupplierService/UpdateSupplier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupplierServiceServer).UpdateSupplier(ctx, req.(*UpdateSupplierReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SupplierService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.SupplierService",
	HandlerType: (*SupplierServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "AddSupplier",
			Handler:    _SupplierService_AddSupplier_Handler,
		},
		{
			MethodName: "ReadSupplierByNama",
			Handler:    _SupplierService_ReadSupplierByNama_Handler,
		},
		{
			MethodName: "ReadSupplier",
			Handler:    _SupplierService_ReadSupplier_Handler,
		},
		{
			MethodName: "UpdateSupplier",
			Handler:    _SupplierService_UpdateSupplier_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "supplier.proto",
}

func init() { proto.RegisterFile("supplier.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x54, 0xcd, 0x4e, 0xf2, 0x40,
	0x14, 0x85, 0xf2, 0xf3, 0xc1, 0x85, 0x0f, 0xf5, 0x46, 0xb1, 0x29, 0x2c, 0xc8, 0xc4, 0x05, 0xab,
	0x92, 0xe0, 0xd2, 0x68, 0x14, 0xe2, 0x46, 0x13, 0x1b, 0x4b, 0x7c, 0x80, 0x81, 0x8e, 0x84, 0xa4,
	0xb4, 0x43, 0x3b, 0x35, 0xe9, 0x2b, 0x98, 0xb8, 0xf1, 0x31, 0x7c, 0x4a, 0xd3, 0x1f, 0xca, 0x54,
	0x40, 0x1f, 0x40, 0x97, 0x73, 0xce, 0xb9, 0x33, 0x73, 0xcf, 0xfd, 0x81, 0x96, 0x1f, 0x70, 0x6e,
	0x2f, 0x98, 0xa7, 0x73, 0xcf, 0x15, 0x2e, 0x96, 0xe7, 0x1e, 0x9f, 0x69, 0x9d, 0xb9, 0xeb, 0xce,
	0x6d, 0x36, 0x88, 0xb1, 0x69, 0xf0, 0x3c, 0x60, 0x4b, 0x2e, 0xc2, 0x44, 0x42, 0x5e, 0x15, 0x68,
	0xdd, 0x58, 0xd6, 0x24, 0x0d, 0x34, 0xd9, 0x0a, 0x09, 0x34, 0xef, 0x5d, 0x8b, 0xad, 0x21, 0xb5,
	0xd8, 0x2b, 0xf6, 0xeb, 0x66, 0x0e, 0x8b, 0x34, 0x0f, 0x74, 0x49, 0x33, 0x8d, 0x92, 0x68, 0x64,
	0x0c, 0xcf, 0xe0, 0xff, 0x1d, 0x73, 0x16, 0x7e, 0x26, 0x2a, 0xc5, 0xa2, 0x3c, 0x88, 0x5d, 0xa8,
	0x8f, 0x3d, 0x46, 0x05, 0xb3, 0x46, 0xa1, 0x5a, 0x8e, 0x15, 0x1b, 0x40, 0x62, 0x0d, 0x47, 0xad,
	0xe4, 0x58, 0xc3, 0x41, 0x0d, 0x6a, 0x4f, 0xdc, 0xa2, 0x82, 0x8d, 0x42, 0xb5, 0x1a, 0x93, 0xd9,
	0x79, 0xc3, 0x19, 0x8e, 0xfa, 0x4f, 0xe6, 0x0c, 0x07, 0xdb, 0x50, 0x9d, 0x08, 0x2a, 0x02, 0x5f,
	0xad, 0xf5, 0x8a, 0xfd, 0x8a, 0x99, 0x9e, 0xc8, 0x05, 0x9c, 0x98, 0x8c, 0x66, 0x66, 0x8c, 0xc2,
	0x28, 0x9f, 0xd4, 0x92, 0x9f, 0xd2, 0x25, 0xef, 0x0a, 0xb4, 0x77, 0x45, 0xfb, 0xfc, 0x17, 0x3b,
	0x6a, 0xc2, 0xa1, 0xec, 0x49, 0xec, 0xc6, 0x15, 0x34, 0xa8, 0x6d, 0x4b, 0x89, 0x96, 0xfa, 0x8d,
	0x61, 0x57, 0x8f, 0x7a, 0x55, 0xdf, 0x6d, 0xa0, 0x29, 0x07, 0x90, 0x37, 0x05, 0x8e, 0x92, 0x87,
	0xff, 0xba, 0x56, 0x04, 0xfe, 0xf0, 0x43, 0x81, 0x83, 0xf5, 0xc7, 0x26, 0xcc, 0x7b, 0x59, 0xcc,
	0x18, 0x5e, 0x42, 0x43, 0x9a, 0x6a, 0x3c, 0x4e, 0xdc, 0xcd, 0x0f, 0xba, 0xd6, 0xd6, 0x93, 0xcd,
	0xa0, 0xaf, 0x37, 0x83, 0x7e, 0x1b, 0x6d, 0x06, 0x52, 0xc0, 0x47, 0xc0, 0xed, 0x4a, 0x60, 0x67,
	0x7f, 0x8d, 0x56, 0xda, 0xb7, 0x05, 0x24, 0x05, 0xbc, 0x86, 0xa6, 0xcc, 0xe1, 0x9e, 0xc7, 0xa3,
	0x4f, 0x7d, 0xbd, 0x27, 0xbd, 0x61, 0x0c, 0xad, 0x7c, 0xd9, 0xf1, 0x34, 0xd1, 0x6e, 0x35, 0xc3,
	0xfe, 0xcc, 0xa6, 0xd5, 0x18, 0x39, 0xff, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xba, 0x4f, 0xc7, 0x7f,
	0x2b, 0x05, 0x00, 0x00,
}
